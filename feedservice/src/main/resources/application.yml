server:
  port: 8080

spring:
  application:
    name: feedservice
---

spring:
  config:
    activate:
      on-profile: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    function:
      routing-expression: "headers['type']=='EventCreated' ? 'wheneverEventCreated_PublishPost' : headers['type']=='FaceBlurred' ? 'wheneverFaceBlurred_PostUpdated' : headers['type']=='IdentifiedAsFireEvent' ? 'wheneverIdentifiedAsFireEvent_PostUpdated' : 'discardFunction'"
    stream:
      kafka:
        binder:
          brokers: localhost:9092
      bindings:
          functionRouter-in-0:              
            group: feedservice
            destination: fireresponsesystem
            contentType: application/json  
          producer-out-0:
            destination: fireresponsesystem
            contentType: application/json
logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8086

---

spring:
  config:
    activate:
      on-profile: docker
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
  cloud:
    function:
      routing-expression: "headers['type']=='EventCreated' ? 'wheneverEventCreated_PublishPost' : headers['type']=='FaceBlurred' ? 'wheneverFaceBlurred_PostUpdated' : headers['type']=='IdentifiedAsFireEvent' ? 'wheneverIdentifiedAsFireEvent_PostUpdated' : 'discardFunction'"
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
      bindings:
          functionRouter-in-0:              
            group: feedservice
            destination: fireresponsesystem
            contentType: application/json  
          producer-out-0:
            destination: fireresponsesystem
            contentType: application/json
            

